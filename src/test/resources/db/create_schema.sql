DROP TABLE IF EXISTS GET_FRIENDS;
DROP TABLE IF EXISTS FRIENDS;
DROP TABLE IF EXISTS SEND;
DROP TABLE IF EXISTS ACCOUNTS CASCADE;

CREATE TABLE ACCOUNTS
(
  id          SERIAL NOT NULL,
  login       VARCHAR(255) UNIQUE,
  password    VARCHAR(255),
  first_name  VARCHAR(255),
  middle_name VARCHAR(255),
  last_name   VARCHAR(255),
  email       VARCHAR(255),
  birth_day   DATE,
  picture     OID,

  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS TELEPHONES;
CREATE TABLE TELEPHONES
(
  ID_TELEPHONE SERIAL NOT NULL,
  TELEPHONE    VARCHAR(255),
  TYPE         VARCHAR(255),
  ID_ACCOUNT   INTEGER,
  FOREIGN KEY (ID_ACCOUNT) REFERENCES ACCOUNTS (ID)
    ON DELETE CASCADE,
  PRIMARY KEY (ID_TELEPHONE)
);

CREATE TABLE FRIENDS
(
  ID_ACCOUNT1 INTEGER,
  ID_ACCOUNT2 INTEGER,
  FOREIGN KEY (ID_ACCOUNT1) REFERENCES ACCOUNTS (ID)
    ON DELETE CASCADE,
  FOREIGN KEY (ID_ACCOUNT2) REFERENCES ACCOUNTS (ID)
    ON DELETE CASCADE,
  PRIMARY KEY (ID_ACCOUNT1, ID_ACCOUNT2)
);


CREATE TABLE SEND
(
  id           SERIAL NOT NULL,
  MESSAGE      TEXT   NOT NULL,
  DATE         TIMESTAMP,
  FROM_ACCOUNT INTEGER,
  TO_ACCOUNT   INTEGER,
  FOREIGN KEY (FROM_ACCOUNT) REFERENCES ACCOUNTS (ID)
    ON DELETE CASCADE,
  FOREIGN KEY (TO_ACCOUNT) REFERENCES ACCOUNTS (ID)
    ON DELETE CASCADE,
  PRIMARY KEY (id)
);